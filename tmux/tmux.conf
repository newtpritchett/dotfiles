unbind C-b
set -g prefix C-Space
bind-key C-Space last-window
bind-key e send-prefix

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour10
set -g status-attr bold
# display the status of the prefix state
#  show green block if in prefix mode, otherwise just show whitespace
set -g status-left '#{?client_prefix,#[reverse],} #H '
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold]  %H:%M   #(cat ~/.weather | cut -c 16- | head -2 | xargs echo -n)  '
# set -g status-right-length 50
# set -g status-left-length 20

set -g default-terminal "screen-256color"

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr dim
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1
setw -g window-status-separator " "

setw -g window-style 'bg=black'
setw -g window-active-style 'bg=#252525'
set-option -g pane-active-border-style 'fg=#ff2200,bg=#1f1e1e'

set -g base-index 1
setw -g pane-base-index 1

# VIM-style bindings between panes
setw -g mode-keys vi

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key ! break-pane -t :
bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"
bind-key m command-prompt -p "change window #W from #I to:" "move-window -t '%%'"

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D


# tab to enter copy-mode
unbind [
bind Tab copy-mode
# v to select
# bind-key -t vi-copy 'v' begin-selection
# y to yank
# bind-key -t vi-copy 'y' copy-selection
# P to paste
# unbind P
# bind P paste-buffer

# open man page with /
bind / command-prompt -p "Open man page for:" "split-window -h 'exec man %%'"
# open a commit message editor to commit the current status
bind c split-window -c "#{pane_current_path}" -h 'git commit -a'
# open vim in the current directory
bind v split-window -h 'vim .'

unbind M-q
bind -n M-q confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind -n M-Q kill-pane


unbind *
bind * list-clients

# faster re-sourcing
bind r source-file ~/.tmux.conf;
# Commands.
#bind C-a last-window
unbind %
unbind *
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# i3 like terminal splitting
bind -n M-Enter split-window -h -c "#{pane_current_path}" \; select-layout even-horizontal


set-option -g repeat-time 0
set -sg escape-time 0
set -g mouse on
set -g renumber-windows on

# RESIZING
#
# when multiple clients are connected:
# only resize window when smallest client
# is *actively* looking at the screen
setw -g aggressive-resize on

unbind Left
unbind Right
unbind Down
unbind Up
bind -r Left resize-pane -L 2
bind -r Right resize-pane -R 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2


# genereated bind keys for switching windows
#    Don't change!
bind-key -n M-1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1 -c "#{pane_current_path}"'
bind-key -n M-2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2 -c "#{pane_current_path}"'
bind-key -n M-3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3 -c "#{pane_current_path}"'
bind-key -n M-4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4 -c "#{pane_current_path}"'
bind-key -n M-5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5 -c "#{pane_current_path}"'
bind-key -n M-6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6 -c "#{pane_current_path}"'
bind-key -n M-7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7 -c "#{pane_current_path}"'
bind-key -n M-8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8 -c "#{pane_current_path}"'
bind-key -n M-9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9 -c "#{pane_current_path}"'
